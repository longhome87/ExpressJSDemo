{
  "stats": {
    "suites": 11,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2018-08-31T10:33:01.485Z",
    "end": "2018-08-31T10:33:01.912Z",
    "duration": 427,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "2f851bf3-e53a-4c6c-9ba2-5c4dc010a67d",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "41de2251-7035-4249-89e6-8201c5a690b9",
        "title": "PRODUCT",
        "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\product.test.js",
        "file": "\\test\\product.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "5e18d185-d12a-4b31-b36e-39fb5f8d3a2c",
            "title": "/ADD product",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\product.test.js",
            "file": "\\test\\product.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should add new product success",
                "fullTitle": "PRODUCT /ADD product it should add new product success",
                "timedOut": false,
                "duration": 106,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.PRODUCTS)\n    .field('txtName', 'Product Test')\n    .field('txtCost', 1000)\n    .field('txtQty', 1)\n    .field('txtPrice', 1000)\n    .attach('txtImage', './test/images/example-product.png', 'example-product.png')\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(201);\n        res.body.should.have.property('name', 'Product Test');\n        newProductId = res.body.id;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6e5a41e0-34aa-4510-86d5-ebeefcf4eed3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return 400 error for given missing image",
                "fullTitle": "PRODUCT /ADD product it should return 400 error for given missing image",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.PRODUCTS)\n    .field('txtName', 'Product Test')\n    .field('txtCost', 1000)\n    .field('txtQty', 1)\n    .field('txtPrice', 1000)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(400);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "bd4f492d-97c7-49f3-9a97-5b8b37a1c133",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6e5a41e0-34aa-4510-86d5-ebeefcf4eed3",
              "bd4f492d-97c7-49f3-9a97-5b8b37a1c133"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 114,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1b973b3a-1bb5-4e3f-9bad-573c39f68821",
            "title": "/GET product by id",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\product.test.js",
            "file": "\\test\\product.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should get product success for given existing id",
                "fullTitle": "PRODUCT /GET product by id it should get product success for given existing id",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get(API.PRODUCTS + '/' + newProductId)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.should.have.property('id', newProductId);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3627c4c0-4214-433c-85e3-f337da0cb6bf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return 404 error for given NOT existing id",
                "fullTitle": "PRODUCT /GET product by id it should return 404 error for given NOT existing id",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get(API.PRODUCTS + '/0')\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(404);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "503fca10-01ba-46c4-bc9d-2def91ca36aa",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3627c4c0-4214-433c-85e3-f337da0cb6bf",
              "503fca10-01ba-46c4-bc9d-2def91ca36aa"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 14,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "42db2fbd-4936-4d53-97e5-37601e08c750",
            "title": "/GET products",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\product.test.js",
            "file": "\\test\\product.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should get all the products",
                "fullTitle": "PRODUCT /GET products it should get all the products",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get(API.PRODUCTS)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.should.not.have.lengthOf(0);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7247299e-2718-46cd-a53d-b20d5dc52fe9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7247299e-2718-46cd-a53d-b20d5dc52fe9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 10,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1e4fd4b9-e5bd-45d9-86a5-a28987ec8785",
            "title": "/UPDATE product",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\product.test.js",
            "file": "\\test\\product.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should return update success for given existing id",
                "fullTitle": "PRODUCT /UPDATE product it should return update success for given existing id",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .put(API.PRODUCTS + '/' + newProductId)\n    .field('txtName', 'Product Test Update')\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.should.have.property('name', 'Product Test Update');\n        res.body.id.should.equal(newProductId);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e47c8d64-96f5-42f9-9ced-9ec6c3e69c63",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return 500 error for given NOT existing id",
                "fullTitle": "PRODUCT /UPDATE product it should return 500 error for given NOT existing id",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .put(API.PRODUCTS + '/0')\n    .field('txtName', 'Product Test Update')\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(500);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "44eea8bb-0c3f-4b90-9835-3cbb2873a7b9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e47c8d64-96f5-42f9-9ced-9ec6c3e69c63",
              "44eea8bb-0c3f-4b90-9835-3cbb2873a7b9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 14,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e35301c3-bcdf-4fce-a177-3b18fbcaeafd",
            "title": "/DELETE product by id",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\product.test.js",
            "file": "\\test\\product.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should delete success for given existing id",
                "fullTitle": "PRODUCT /DELETE product by id it should delete success for given existing id",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .del(API.PRODUCTS + '/' + newProductId)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        done();\n    }).err;",
                "err": {},
                "isRoot": false,
                "uuid": "ff23f9dc-eae2-4399-a7de-b0ca171c9140",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return 500 err for given NOT existing id",
                "fullTitle": "PRODUCT /DELETE product by id it should return 500 err for given NOT existing id",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .del(API.PRODUCTS + '/' + newProductId)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(500);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "24d140c7-2515-4214-b81e-d4761d2ac654",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ff23f9dc-eae2-4399-a7de-b0ca171c9140",
              "24d140c7-2515-4214-b81e-d4761d2ac654"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 14,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "7097eec2-be80-4eac-9b7d-423f982452da",
        "title": "USER",
        "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\user.test..js",
        "file": "\\test\\user.test..js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "f7470dda-94f8-4998-85f2-6f94961ede05",
            "title": "/POST signup",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\user.test..js",
            "file": "\\test\\user.test..js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should return message: Must be at least 3 chars long.",
                "fullTitle": "USER /POST signup it should return message: Must be at least 3 chars long.",
                "timedOut": false,
                "duration": 41,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.USERS + '/signup')\n    .field('txtEmail', VALID_EMAIL)\n    .field('txtPassword', INVALID_PASSWORD)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.messages[0].should.equal(ERROR_MESSAGES.MUST_BE_AT_LEAST_3_CHARS_LONG);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7ce3c17d-79c4-406f-8457-3366f6078cd1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return message: Invalid email format.",
                "fullTitle": "USER /POST signup it should return message: Invalid email format.",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.USERS + '/signup')\n    .field('txtEmail', INVALID_EMAIL)\n    .field('txtPassword', VALID_PASSWORD)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.messages[0].should.equal(ERROR_MESSAGES.INVALID_EMAIL_FORMAT);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2a37d7c1-c72a-4fa2-b1f8-f83a87914f69",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should sign up success",
                "fullTitle": "USER /POST signup it should sign up success",
                "timedOut": false,
                "duration": 43,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.USERS + '/signup')\n    .field('txtEmail', VALID_EMAIL)\n    .field('txtPassword', VALID_PASSWORD)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        newUserId = res.body.id;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6a6c7a06-1def-4568-8bd9-b29378c06a4c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7ce3c17d-79c4-406f-8457-3366f6078cd1",
              "2a37d7c1-c72a-4fa2-b1f8-f83a87914f69",
              "6a6c7a06-1def-4568-8bd9-b29378c06a4c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 96,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "504891e1-683a-44f8-8609-ca7a958ae833",
            "title": "/POST signin",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\user.test..js",
            "file": "\\test\\user.test..js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should return message: No user found.",
                "fullTitle": "USER /POST signin it should return message: No user found.",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.USERS + '/signin')\n    .field('txtEmail', NO_USER_FOUND_EMAIL)\n    .field('txtPassword', VALID_PASSWORD)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.messages[0].should.equal(ERROR_MESSAGES.NO_USER_FOUND);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "595e5194-2823-475f-b41d-cd2fae359c89",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return message: Must be at least 3 chars long.",
                "fullTitle": "USER /POST signin it should return message: Must be at least 3 chars long.",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.USERS + '/signin')\n    .field('txtEmail', VALID_EMAIL)\n    .field('txtPassword', INVALID_PASSWORD)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.messages[0].should.equal(ERROR_MESSAGES.MUST_BE_AT_LEAST_3_CHARS_LONG);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "716c44f1-51bd-4605-96e6-5a8bc9c44029",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return message: Invalid email format.",
                "fullTitle": "USER /POST signin it should return message: Invalid email format.",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.USERS + '/signin')\n    .field('txtEmail', INVALID_EMAIL)\n    .field('txtPassword', VALID_PASSWORD)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.messages[0].should.equal(ERROR_MESSAGES.INVALID_EMAIL_FORMAT);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "b6f8aca6-614f-417f-b2e3-ff4f1db05766",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should sign in success",
                "fullTitle": "USER /POST signin it should sign in success",
                "timedOut": false,
                "duration": 23,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .post(API.USERS + '/signin')\n    .field('txtEmail', VALID_EMAIL)\n    .field('txtPassword', VALID_PASSWORD)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        res.body.should.have.property('id', newUserId);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f29ddb12-5593-4b8c-8fd9-f5361165b4db",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "595e5194-2823-475f-b41d-cd2fae359c89",
              "716c44f1-51bd-4605-96e6-5a8bc9c44029",
              "b6f8aca6-614f-417f-b2e3-ff4f1db05766",
              "f29ddb12-5593-4b8c-8fd9-f5361165b4db"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 59,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a8345785-e6b1-4a22-894a-f3699f53281c",
            "title": "/GET product by id",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\user.test..js",
            "file": "\\test\\user.test..js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should get user success for given existing id",
                "fullTitle": "USER /GET product by id it should get user success for given existing id",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get(API.USERS + '/' + newUserId)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        // res.body.should.have.property('id', 0);\n        res.body.should.have.property('id', newUserId);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f2d388bb-97ad-4710-8baf-6e76931ad152",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should return 404 error for given NOT existing id",
                "fullTitle": "USER /GET product by id it should return 404 error for given NOT existing id",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get(API.USERS + '/0')\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(404);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "05dcdc91-e937-453d-b916-fe594bf09157",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f2d388bb-97ad-4710-8baf-6e76931ad152",
              "05dcdc91-e937-453d-b916-fe594bf09157"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 15,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "12aa71ef-cdd9-453c-aefd-7031262c8511",
            "title": "/DELETE user by id",
            "fullFile": "D:\\Technical\\NodeJS\\ExpressApplicationGenerator\\myapp\\test\\user.test..js",
            "file": "\\test\\user.test..js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should delete success for given existing id",
                "fullTitle": "USER /DELETE user by id it should delete success for given existing id",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .del(API.USERS + '/' + newUserId)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "bbe932e8-ffda-47fb-9643-5ae30b9c4185",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should delete success for given NOT existing id",
                "fullTitle": "USER /DELETE user by id it should delete success for given NOT existing id",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .del(API.USERS + '/' + newUserId)\n    .end((err, res) => {\n        if (err) { done(err); }\n        res.should.have.status(200);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2d4fa2fa-9c73-4d3c-8582-3dcb55882190",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bbe932e8-ffda-47fb-9643-5ae30b9c4185",
              "2d4fa2fa-9c73-4d3c-8582-3dcb55882190"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 17,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}